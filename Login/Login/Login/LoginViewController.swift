//
//  LoginViewController.swift
//  Login
//
//  Created by Christian Adiputra on 08/04/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import DesignKit

final class LoginViewController: UIViewController {
    
    var container: UIView = {
        let kit = DesignKitImp()
        let view = kit.buildRoundedView()
        view.backgroundColor = UIColor.lightGray.withAlphaComponent(0.2)
        return view
    }()
    
    var nameLabel: UILabel = {
        let label = UILabel()
        label.textColor = .black
        label.font = UIFont.systemFont(ofSize: 20, weight: .bold)
        label.text = "Name"
        return label
    }()
    
    var emailTF: UITextField = {
        let textField = CustomTextField()
        textField.backgroundColor = .lightGray
        textField.placeholder = "Enter Email here"
        textField.keyboardType = UIKeyboardType.default
        textField.borderStyle = UITextField.BorderStyle.roundedRect
        textField.clearButtonMode = UITextField.ViewMode.whileEditing
        return textField
    }()
    
    var passLabel: UILabel = {
        let label = UILabel()
        label.textColor = .black
        label.font = UIFont.systemFont(ofSize: 20, weight: .bold)
        label.text = "Password"
        return label
    }()
    
    var passTF: UITextField = {
        let textField = CustomTextField()
        textField.backgroundColor = .lightGray
        textField.placeholder = "Enter password here"
        textField.keyboardType = UIKeyboardType.default
        textField.borderStyle = UITextField.BorderStyle.roundedRect
        textField.clearButtonMode = UITextField.ViewMode.whileEditing
        return textField
    }()
    
    var confirmBtn: UIButton = {
        let button = UIButton()
        button.backgroundColor = UIColor.green
        button.layer.cornerRadius = 8
        button.setTitle("Login", for: .normal)
        return button
    }()
    
    // MARK: - Public properties -
    
    var presenter: LoginPresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    
    func setupView() {
        view.backgroundColor = .white
        view.addSubview(container)
        container.addSubview(nameLabel)
        container.addSubview(passLabel)
        container.addSubview(emailTF)
        container.addSubview(passTF)
        container.addSubview(confirmBtn)
        confirmBtn.addTarget(self, action: #selector(login), for: .touchUpInside)
        
        emailTF.delegate = self
        passTF.delegate = self
        
        container.snp.makeConstraints { make in
            make.centerX.centerY.equalToSuperview()
            make.height.equalTo(300)
            make.left.equalToSuperview().offset(16)
            make.right.equalToSuperview().offset(-16)
        }
        
        nameLabel.snp.makeConstraints { make in
            make.left.top.equalTo(container).offset(16)
        }
        
        emailTF.snp.makeConstraints { make in
            make.left.equalTo(nameLabel)
            make.right.equalTo(container).offset(-16)
            make.top.equalTo(nameLabel.snp.bottom).offset(8)
            make.height.equalTo(50)
        }
        
        passLabel.snp.makeConstraints { make in
            make.left.equalTo(container).offset(16)
            make.top.equalTo(emailTF.snp.bottom).offset(16)
        }
        
        passTF.snp.makeConstraints { make in
            make.left.equalTo(container).offset(16)
            make.right.equalTo(container).offset(-16)
            make.height.equalTo(50)
            make.top.equalTo(passLabel.snp.bottom).offset(8)
        }
        
        confirmBtn.snp.makeConstraints { make in
            make.top.equalTo(passTF.snp.bottom).offset(25)
            make.left.equalTo(container).offset(16)
            make.right.equalTo(container).offset(-16)
            make.height.equalTo(50)
        }
    }
    
    @objc func login() {
        presenter.login()
    }
    
}

// MARK: - Extensions -

extension LoginViewController: LoginViewInterface {
    
}

extension LoginViewController: UITextFieldDelegate {
    
    func textFieldDidEndEditing(_ textField: UITextField) {
        if textField == emailTF {
            guard let text = textField.text else { return }
            presenter.setEmail(email: text)
        } else if textField == passTF {
            guard let text = textField.text else { return }
            presenter.setPass(pass: text)
        }
        
        
    }
    
}
